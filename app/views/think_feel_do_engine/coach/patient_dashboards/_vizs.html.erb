<div class="row">
  <div class="btn-group-wrap">
    <div class="btn-group" data-toggle="buttons">
      <label class="btn btn-default active interval">
        <input type="radio" value="7" checked="">7 Day
      </label>
      <label class="btn btn-default interval">
        <input type="radio" value="28">28 day
      </label>
    </div>
  </div>
  <nav>
    <ul class="pager">
      <li><a class="offset" id="previous" data-value="1" href="#"><span aria-hidden="true">&larr;</span> Previous Period</a></li>
      <li><a class="offset" id="next" data-value="-1" href="#">Next Period <span aria-hidden="true">&rarr;</span></a></li>
     </ul>
  </nav>
  <div class="text-center" id="date-range">
    <strong>Date</strong>
  </div>
</div>
<% if phq_features? %>
  <div id="phq"></div>
<% end %>
<div id="mood"></div>
<div id="emotions"></div>
<script>
// starting graph parameters assume 7 day view ending in today
var activationDate = activation("<%= patient.created_at %>")
var graphParameters = new Graph(
            <%= sanitize(patient.mood_rating_daily_averages.to_json) %>,
            <%= sanitize(patient.emotional_rating_daily_averages.to_json) %>,
            <%= phq_features? ? sanitize(patient.phq_scores.to_json) : "null" %>,
            $("div#viz-container")
          );

sc.drawGraphs = function() {
  $("div#mood, div#emotions").empty();

  <% if phq_features? %>
    $("div#phq").empty();
    var phqGraphTitle = "PHQ9";
    d3.select("#phq")
      .datum(graphParameters.phqData)
        .call(columnChart(graphParameters.startDate, graphParameters.endDate, 0, 27, phqGraphTitle, "Score")
          .width(graphParameters.graphWidth)
          .height(300)
          .x(function(d, i) { return moment(d.day).startOf('day')._d; })
          .y(function(d, i) { return d.intensity; }));
  <% end %>

  var moodGraphTitle = "Mood";
  d3.select("#mood")
    .datum(graphParameters.moodData)
      .call(columnChart(graphParameters.startDate, graphParameters.endDate, 0, 10, moodGraphTitle, "mood")
        .width(graphParameters.graphWidth)
        .height(300)
        .x(function(d, i) { return moment(d.day).startOf('day')._d; })
        .y(function(d, i) { return d.intensity; }));

  var emotionGraphTitle = "Positive and Negative Emotions";
  d3.select("#emotions")
    .datum(graphParameters.emotionsData)
      .call(columnChart(graphParameters.startDate, graphParameters.endDate, -10, 10, emotionGraphTitle, "Intensity")
        .width(graphParameters.graphWidth)
        .height(400));

  appendDateRange(graphParameters);
}

sc.drawGraphs();
sc.filterEmotionMoodViz(graphParameters);
</script>
